// 1 - String_Declaration
String strVal;

// 2 - String_Initialization_from_String_Constant_Double_Quotes
String strVal = "test string";
print("String from 'test string':", strVal);

// 3 - String_Initialization_from_String_Constant_Single_Quotes
String strVal = "test string";
print("String from 'test string':", strVal);

// 4 - String_Initialization_from_Numeric_Constant_Int
String strVal = 1;
print("String from 1:", strVal);

// 5 - String_Initialization_from_Numeric_Constant_Int_Var
int iVal = 10;
String strVal = iVal;
print("String from iVal:", strVal);

// 6 - String_Initialization_from_Numeric_Constant_Float
String strVal = 4.4;
print("String from 4.4:", strVal);

// 7 - String_Initialization_from_Numeric_Constant_Float_Var
Float fVal = 4.0;
String strVal = fVal;
print("String from fVal:", strVal);

// 8 - String_Initialization_from_Date_Var
Date dataVal = "1993-01-01";
String strVal = dataVal;
print("String from dataVal:", strVal);

// 9 - String_Initialization_from_Bool_Var
Bool bVal = "T";
String strVal = bVal;
print("String from bVal:", strVal);

// 10 - String_Initialization_from_StringConst_StringConst_Concat
String strVal = "Some" # "body";
print("String from 'some' # 'body':" strVal);

// 11 - String_Initialization_from_StringConst_StringVar_Concat
String strVal1 = "information";
String strVal = "Some" # strVal1;
print("String from 'some' # strVal1:'information' :" strVal);

// 12 - String_Initialization_from_StringVar_StringVar_Concat
String strVal1 = "information";
String strVal2 = "this";
String strVal = strVal2 # strVal1;
print("String from strVal2:'this' # strVal1:'information' :" strVal);

// 13 - String_Initialization_from_StringConst_IntConst_Concat
String strVal = "Some" # 1;
print("String from 'some' # 1 :" strVal);

// 14 - String_Initialization_from_StringConst_IntVar_Concat
Int iVal = 120;
String strVal = "Some" # iVal;
print("String from 'some' # iVal:120 :" strVal);

// 15 - String_Initialization_from_StringVar_IntConst_Concat
String strVal1 = "information";
String strVal = strVal1 # 1235;
print("String from strVal1 # 1235 :" strVal);

// 16 - String_Initialization_from_StringVar_IntVar_Concat
String strVal1 = "information";
Int iVal = 728;
String strVal = strVal1 # iVal;
print("String from 'some' # strVal1:'information' :" strVal);

// 17 - String_Initialization_from_String_Slice_Lower_Bound_Only
String strVal1 = "tacobell";
String strVal2 = strVal1[4~];
print("String from slice, should be 'bell':", strVal2);

// 18 - String_Initialization_from_String_Slice_Upper_Bound_Only
String strVal1 = "tacobell";
String strVal2 = strVal1[~4];
print("String from slice, should be 'taco':", strVal2);

// 19 - String_Initialization_from_String_Slice_Lower_Upper_Bound
String strVal1 = "Maybe I don't feel well";
String strVal2 = strVal1[5~17];
print("String from slice, should be 'I don't feel well':", strVal2);

// 20 - String_Slice_Assignment_from_Lower_Bound_Only
String strVal = "tacobell";
strVal[4~] = "hut";
print("String into slice, should be 'tacohut':", strVal);

// 21 - String_Slice_Assignment__from_Upper_Bound_Only
String strVal = "tacobell";
strVal[~4] = "school";
print("String into slice, should be 'schoolbell':, strVal);

// 22 - String_Slice_Assignment_from_Lower_Upper_Bound
String strVal = "The wheels on the bus";
strVal[4~10] = "seats";
print("String into slice, should be 'The seats on the bus':, strVal);

// 23 - String_Array_Initialization_from_String_Constant
String strValM[] = "string 1", "string 2", "string 3", "string 4";
print("String array from strings:", strValM);

// 24 - String_Array_Initialization_from_Numeric_Constant_Int
String strValM[] = 1, 2, 3, 4;
print("String array from ints:", strValM);

// 25 - String_Array_Initialization_from_Numeric_Constant_Float
String strValM[] = 1.0, 2.1, 3.2, 4.3;
print("String array from floats:", strValM);

// 26 - StringVar_Equal_To_StringVar
String strVal1 = "some";
String strVal2 = "some";

if strVal1 == strVal1:
    print("String comparison should be True, 'some' == 'some' :" strVal1 == strVal2);
else:
    print("ERROR: this should not print");
endif;


// 27 - StringVar_Equal_To_StringConst
String strVal = "Clark";

if strVal == "Clark":
    print("String comparison should be True, strVal == 'Clark' :", strVal == "Clark");
else:
    print("ERROR: this should not print");
endif;

// 28 - StringConst_Equal_To_StringVar
String strVal = "Maynard";

if "Maynard" == strVal:
    print("String comparison should be True, 'Maynard' == strVal :", strVal == "Maynard");
else:
    print("ERROR: this should not print");
endif;



// 29 - StringConst_Equal_To_StringConst
if "Silvestro" != "Clark":
    print("String comparison should be True, 'Clark' == 'Clark' :", "Clark" == "Clark");
else:
    print("ERROR: this should not print");
endif;

// 30 - StringVar_NotEqual_To_StringConst
String strVal = "Silvestro";

if strVal != "Clark":
    print("String comparison should be True, strVal == 'Clark' :", strVal == "Clark");
else:
    print("ERROR: this should not print");
endif;

// 31 - StringConst_NotEqual_To_StringVar
String strVal = "Maynard";

if "Perl" != strVal:
    print("String comparison should be True, 'Maynard' == strVal :", strVal == "Maynard");
else:
    print("ERROR: this should not print");
endif;


// 32 - StringConst_NotEqual_To_StringConst
if "Clark" != "Ortiz":
    print("String comparison should be True, 'Clark' == 'Clark' :", "Clark" == "Clark");
else:
    print("ERROR: this should not print");
endif;


// 33 - String_Constant_IN_String_Array
String strVal[] = "Clark", "Silvestro", "Slavin", "Fernandez";

if "Clark" IN strVal:
    print("String in array, "Clark" in strVal");
else:
    print("ERROR: this should not print");
endif;

// 34 - String_Var_IN_String_Array
String strVal[] = "Clark", "Silvestro", "Slavin", "Fernandez";
String strName = "Slavin";

if strName IN strVal:
    print("String in array, strName in strVal");
else:
    print("ERROR: this should not print");
endif;

// 35 - String_Constant_IN_String_List
if "Clark" IN "Clark", "Silvestro", "Slavin", "Fernandez":
    print("String in array, "Clark" in strVal");
else:
    print("ERROR: this should not print");
endif;

// 36 - String_Var_IN_String_List
String strName = "Slavin";

if strName IN "Clark", "Silvestro", "Slavin", "Fernandez":
    print("String in array, strName in strVal");
else:
    print("ERROR: this should not print");
endif;

// 37 - String_Constant_NOTIN_String_Array
String strVal[] = "Clark", "Silvestro", "Slavin", "Fernandez";

if "Ortiz" NOTIN strVal:
    print("String in array, "Clark" in strVal");
else:
    print("ERROR: this should not print");
endif;

// 38 - String_Var_NOTIN_String_Array
String strVal[] = "Clark", "Silvestro", "Slavin", "Fernandez";
String strName = "Ortiz";

if strName NOTIN strVal:
    print("String in array, strName in strVal");
else:
    print("ERROR: this should not print");
endif;

// 39 - String_Constant_NOTIN_String_List
if "Ortiz" NOTIN "Clark", "Silvestro", "Slavin", "Fernandez":
    print("String in array, "Clark" in strVal");
else:
    print("ERROR: this should not print");
endif;

// 40 - String_Var_NOTIN_String_List
String strName = "Ortiz";

if strName NOTIN "Clark", "Silvestro", "Slavin", "Fernandez":
    print("String in array, strName in strVal");
else:
    print("ERROR: this should not print");
endif;

